<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>經緯度及方位距離計算器</title>
    <style>
        table {
            border-collapse: collapse;
            width: 100%;
        }
        th, td {
            border: 1px solid black;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>
    <h1>經緯度及方位距離計算器</h1>
    <form id="calculator">
        <label for="latitude">緯度：</label>
        <input type="text" id="latitude" name="latitude" placeholder="度分秒，例如：22°42'12\"N"><br>
        <label for="longitude">經度：</label>
        <input type="text" id="longitude" name="longitude" placeholder="度分秒，例如：120°14'42\"E"><br>
        <label for="bearing">方位：</label>
        <input type="text" id="bearing" name="bearing"><br>
        <label for="distance">距離：</label>
        <input type="text" id="distance" name="distance"><br>
        <button type="button" onclick="calculateNewCoordinates()">計算新的經緯度</button>
    </form>
    <table>
        <thead>
            <tr>
                <th>初始經緯度</th>
                <th>方位</th>
                <th>距離</th>
                <th>新的緯度</th>
                <th>新的經度</th>
            </tr>
        </thead>
        <tbody id="resultTable">
            <!-- 計算結果將插入此處 -->
        </tbody>
    </table>

    <script>
        const resultTable = document.getElementById('resultTable');

        function dmsToDecimal(dms) {
            const match = dms.match(/^(\d{1,3})°(\d{1,2})'(\d{1,2}(?:\.\d+)?)\"([NSEW])$/);
            if (!match) {
                alert("請輸入正確的度分秒格式！");
                return null;
            }
            const degrees = parseFloat(match[1]);
            const minutes = parseFloat(match[2]);
            const seconds = parseFloat(match[3]);
            const direction = match[4];

            let decimal = degrees + minutes / 60 + seconds / 3600;
            if (direction === 'S' || direction === 'W') {
                decimal *= -1;
            }
            return decimal;
        }

        function decimalToDms(decimal, isLatitude) {
            const direction = decimal >= 0 ? (isLatitude ? 'N' : 'E') : (isLatitude ? 'S' : 'W');
            decimal = Math.abs(decimal);
            const degrees = Math.floor(decimal);
        const minutes = Math.floor((decimal - degrees) * 60);
        const seconds = (((decimal - degrees) * 60) - minutes) * 60;

        return `${degrees}°${minutes}'${seconds.toFixed(2)}\"${direction}`;
    }

    function calculateNewCoordinates() {
        const latitudeDMS = document.getElementById('latitude').value;
        const longitudeDMS = document.getElementById('longitude').value;
        const bearing = parseFloat(document.getElementById('bearing').value);
        const distance = parseFloat(document.getElementById('distance').value);

        const latitude = dmsToDecimal(latitudeDMS);
        const longitude = dmsToDecimal(longitudeDMS);

        if (latitude === null || longitude === null) {
            return;
        }

        // Rhumb Line方法計算新的經緯度
        const R = 6371;
        const lat1_rad = latitude * Math.PI / 180;
        const lon1_rad = longitude * Math.PI / 180;
        const bearing_rad = bearing * Math.PI / 180;
        const angular_distance = distance / R;

        const lat2_rad = lat1_rad + angular_distance * Math.cos(bearing_rad);
        const lat2 = lat2_rad * 180 / Math.PI;

        const q = Math.log(Math.tan(Math.PI / 4 + lat1_rad / 2) / Math.tan(Math.PI / 4 + lat2_rad / 2));
        const lon2_rad = lon1_rad + angular_distance * Math.sin(bearing_rad) / q;
        const lon2 = lon2_rad * 180 / Math.PI;

        // 將結果插入表格
        const newRow = resultTable.insertRow(0);
        newRow.insertCell(0).innerHTML = latitudeDMS + ', ' + longitudeDMS;
        newRow.insertCell(1).innerHTML = bearing;
        newRow.insertCell(2).innerHTML = distance;
        newRow.insertCell(3).innerHTML = decimalToDms(lat2, true);
        newRow.insertCell(4).innerHTML = decimalToDms(lon2, false);

        // 保留20行資料列
        if (resultTable.rows.length > 20) {
            resultTable.deleteRow(20);
        }
    }
</script>
</body>
</html>
